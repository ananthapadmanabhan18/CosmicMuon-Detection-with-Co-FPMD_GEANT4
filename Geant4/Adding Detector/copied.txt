
// Class description:
//
//   Class implementing a CSG-like type "PGON" Geant 3.21 volume,
//   inherited from class G4VCSGfaceted:
//
//   G4Polyhedra( const G4String& name,
//                G4double phiStart,         - initial phi starting angle
//                G4double phiTotal,         - total phi angle
//                G4int numSide,             - number sides
//                G4int numZPlanes,          - number of z planes
//                const G4double zPlane[],   - position of z planes
//                const G4double rInner[],   - tangent distance to inner surface
//                const G4double rOuter[]  ) - tangent distance to outer surface
//
//   G4Polyhedra( const G4String& name,
//                G4double phiStart,    - initial phi starting angle
//                G4double phiTotal,    - total phi angle
//                G4int    numSide,     - number sides
//                G4int    numRZ,       - number corners in r,z space
//                const G4double r[],   - r coordinate of these corners
//                const G4double z[] )  - z coordinate of these corners



  // Set up the dimensions of the detector
  G4double detectorSize = 10.0 * cm; // Change this value as needed
  G4double detectorThickness = 1.0 * cm; // Change this value as needed
  G4double innerRadius = 0.0 * cm;
  G4double outerRadius = 5.0 * cm;
  G4double startAngle = 0.0 * deg;
  G4double spanningAngle = 360.0 * deg;
  G4int numSides = 6;
  G4int numZPlanes = 2;

  // Create the solid volume
  G4Polyhedra* detectorSolid = new G4Polyhedra("DetectorSolid", startAngle, spanningAngle, numSides, numZPlanes,
                                               innerRadius, outerRadius, detectorThickness);
  
  // Create the logical volume
  G4LogicalVolume* detectorLogical = new G4LogicalVolume(detectorSolid, detectorMaterial, "DetectorLogical");
  
  // Create the physical volume
  G4VPhysicalVolume* detectorPhysical = new G4PVPlacement(nullptr, G4ThreeVector(), detectorLogical, "DetectorPhysical", nullptr, false, 0);

  // Set visualization attributes
  G4VisAttributes* visAttributes = new G4VisAttributes(G4Colour(0.5, 0.5, 0.5));
  detectorLogical->SetVisAttributes(visAttributes);

  // Initialize the run manager and start the simulation
  runManager->Initialize();
  runManager->BeamOn(10); // Change the number of events as needed

  // Clean up
  delete runManager;

  return 0;

